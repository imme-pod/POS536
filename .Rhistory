data <-within(data, depth_max[depth_max == 100 & sample_id == "2019_pos536_bongo18r_lrg"] <- 300)
#round max depth of tows from Sonne cruise to nearest value 10,100,300
data <- data %>%
mutate (depth_max_round = case_when(
depth_max <50 ~ 10,
depth_max >= 50 & depth_max <=199 ~ 100,
TRUE ~ 300))
##create factor for season
data$season <- with(data,
ifelse(grepl("2019", date),"Summer_2019", "Winter_2020"))
#create column with random station name
data <- data %>%
mutate (station = case_when(
grepl('pos536_bongo3l', sample_id) ~ 'A',
grepl('pos536_bongo4|pos536_bongo5|pos536_bongo6', sample_id) ~ 'B',
grepl("pos536_bongo7|pos536_bongo8|pos536_bongo9", sample_id) ~ "C",
grepl("pos536_bongo10|pos536_bongo11|pos536_bongo12" , sample_id) ~ "D",
grepl("pos536_bongo13|pos536_bongo14|pos536_bongo15" , sample_id) ~ "E",
grepl("pos536_bongo16|pos536_bongo17|pos536_bongo18" , sample_id) ~ "F",
grepl("pos536_bongo19|pos536_bongo20|pos536_bongo21" , sample_id) ~ "G",
grepl("pos536_bongo22|pos536_bongo23|pos536_bongo24" , sample_id) ~ "H",
grepl("pos536_bongo25|pos536_bongo26|pos536_bongo27" , sample_id) ~ "I",
grepl("pos536_bongo28|pos536_bongo29|pos536_bongo30" , sample_id) ~ "J",
grepl("so279_bongo1a|so279_bongo2a" , sample_id) ~ "K",
grepl("so279_bongo3|so279_bongo4" , sample_id) ~ "L",
grepl("so279_bongo7|so279_bongo8|so279_bongo9" , sample_id) ~ "M",
grepl("so279_bongo16|so279_bongo17|so279_bongo18" , sample_id) ~ "N",
grepl("so279_bongo22|so279_bongo24" , sample_id) ~ "O",
))
## add annotation hierarchy column if possible giving the class
data <- data %>%
mutate (spec_id = case_when(
grepl('Actinopterygii|Myctophidae|Anguilliformes', spec_id_old) ~ 'Actinopterygii',  # Anguilliformes, Actinopterygii, scales, eggs
#grepl('Amphipoda', annotation_hierarchy) ~ 'Amphipoda', #class malacostraca
#grepl("Decapoda | Luciferidae", annotation_hierarchy) ~ "Decapoda", #class malacostraca
grepl("Decapoda|Luciferidae|Euphausiacea|Amphipoda" , spec_id_old) ~ "Malacostraca",
grepl("Annelida" , spec_id_old) ~ "Annelida",
grepl("Copepoda|Calanoida|Eucalanidae|Corycaeidae|Oithonidae|Sapphirina|Macrosetella" , spec_id_old) ~ "Copepoda", #class copepoda
grepl("Ostracoda" , spec_id_old) ~ "Ostracoda",
grepl("Appendicularia" , spec_id_old) ~ "Appendicularia",
grepl("Cephalopoda" , spec_id_old) ~ "Cephalopoda",
grepl("Bryozoa" , spec_id_old) ~ "Bryozoa",
grepl("Chaetognatha" , spec_id_old) ~ "Chaetognatha",
grepl("Cirripedia" , spec_id_old) ~ "Thecostraca",
grepl("Cnidaria|Siphonophorae" , spec_id_old) ~ "Cnidaria",
grepl("Thecosomata|Limacina|Gastropoda" , spec_id_old) ~ "Gastropoda",
grepl("Thaliacea" , spec_id_old) ~ "Thaliacea",
grepl("multiple<other|egg<other|Unknowns|gelatinous" , spec_id_old) ~ "Other",
))
metadata<- data %>%
distinct(sample_id, lat, lon, date, time, season, station,  depth_min, depth_max, depth_max_round,sample_volconc, .keep_all = F)
#seems lat is missing for 2019_pos536_bongo12l_lrg --> resolved
#total abundance of individuals per sample
samples_abund <- aggregate(spec_id ~ (sample_id+sample_volconc), data, length) # counts abundance of individuals per sample
View(samples_abund)
View(samples_abund)
samples_abund$total_abundance_m3 <- samples_abund$spec_id/samples_abund$sample_volconc # calculates total abundance per m^3
samples_abund <-samples_abund[c("sample_id","total_abundance_m3")] # removes spec_id and sample_volconc columns
#same for individual taxonomic categories
species_abund <- aggregate(spec_id ~ (annotation_category + sample_id + sample_volconc), data, length) # counts abundance of ind per tax. group per sample
View(species_abund)
#same for individual taxonomic categories
species_abund <- aggregate(spec_id ~ (spec_id + sample_id + sample_volconc), data, length) # counts abundance of ind per tax. group per sample
##read in all ecotaxa tsvs into one dataframe and select variables to keep
data_raw <- do.call(rbind,lapply(file_list,read.csv, header=TRUE, quote = '"', sep = "\t"))[ ,c('sample_id','object_annotation_category','object_annotation_hierarchy', 'object_date', 'object_time','object_lat', 'object_lon','object_depth_min', 'object_depth_max', 'object_area', 'sample_volconc')]
## remove detritus and other non-living organisms from dataframe
data1 <-data_raw[-grep("not-living", data_raw$object_annotation_hierarchy),]
rm(data_raw)
##remove other not-living data from dataframe
data2 <-data1[-grep("part<Crustacea|scale", data1$object_annotation_category),]
rm(data1)
##remove MSN data from dataframe
data <-data2[-grep("msn", data2$sample_id),]
rm(data2)
## check format of variables (numeric, character, factor, etc.)
str(data)
## rename some variables for easier/shorter names
names(data) = gsub(pattern = "object_", replacement = "", x = names(data))
data$spec_id_old <- data$annotation_category
##date format
data$date <- as.Date(as.character(data$date), format =  "%Y%m%d")
##time format
data$time <- sprintf("%06d", data$time)
data$time <- format(strptime(data$time, format="%H%M%S"), format = "%H:%M")
#and volumes seem super large -> flowmeter volume given in L
#changed to m3
#for both cruises volume changes from zoosplitter (1/4 or 1/8) have been incorporated
data$sample_volconc <- data$sample_volconc/1000
##calculate image area from pixels (pixel size = 10.6Âµm)
data$area_mm2 <- data$area*0.00011236
#fix error for max. depth in specific cells (probably typo upon data entry)
data <-within(data, depth_max[depth_max == 100 & sample_id == "2019_pos536_bongo4l_lrg"] <- 10)
data <-within(data, depth_max[depth_max == 100 & sample_id == "2019_pos536_bongo18r_lrg"] <- 300)
#round max depth of tows from Sonne cruise to nearest value 10,100,300
data <- data %>%
mutate (depth_max_round = case_when(
depth_max <50 ~ 10,
depth_max >= 50 & depth_max <=199 ~ 100,
TRUE ~ 300))
##create factor for season
data$season <- with(data,
ifelse(grepl("2019", date),"Summer_2019", "Winter_2020"))
#create column with random station name
data <- data %>%
mutate (station = case_when(
grepl('pos536_bongo3l', sample_id) ~ 'A',
grepl('pos536_bongo4|pos536_bongo5|pos536_bongo6', sample_id) ~ 'B',
grepl("pos536_bongo7|pos536_bongo8|pos536_bongo9", sample_id) ~ "C",
grepl("pos536_bongo10|pos536_bongo11|pos536_bongo12" , sample_id) ~ "D",
grepl("pos536_bongo13|pos536_bongo14|pos536_bongo15" , sample_id) ~ "E",
grepl("pos536_bongo16|pos536_bongo17|pos536_bongo18" , sample_id) ~ "F",
grepl("pos536_bongo19|pos536_bongo20|pos536_bongo21" , sample_id) ~ "G",
grepl("pos536_bongo22|pos536_bongo23|pos536_bongo24" , sample_id) ~ "H",
grepl("pos536_bongo25|pos536_bongo26|pos536_bongo27" , sample_id) ~ "I",
grepl("pos536_bongo28|pos536_bongo29|pos536_bongo30" , sample_id) ~ "J",
grepl("so279_bongo1a|so279_bongo2a" , sample_id) ~ "K",
grepl("so279_bongo3|so279_bongo4" , sample_id) ~ "L",
grepl("so279_bongo7|so279_bongo8|so279_bongo9" , sample_id) ~ "M",
grepl("so279_bongo16|so279_bongo17|so279_bongo18" , sample_id) ~ "N",
grepl("so279_bongo22|so279_bongo24" , sample_id) ~ "O",
))
## add annotation hierarchy column if possible giving the class
data <- data %>%
mutate (spec_id = case_when(
grepl('Actinopterygii|Myctophidae|Anguilliformes', spec_id_old) ~ 'Actinopterygii',  # Anguilliformes, Actinopterygii, scales, eggs
#grepl('Amphipoda', annotation_hierarchy) ~ 'Amphipoda', #class malacostraca
#grepl("Decapoda | Luciferidae", annotation_hierarchy) ~ "Decapoda", #class malacostraca
grepl("Decapoda|Luciferidae|Euphausiacea|Amphipoda" , spec_id_old) ~ "Malacostraca",
grepl("Annelida" , spec_id_old) ~ "Annelida",
grepl("Copepoda|Calanoida|Eucalanidae|Corycaeidae|Oithonidae|Sapphirina|Macrosetella" , spec_id_old) ~ "Copepoda", #class copepoda
grepl("Ostracoda" , spec_id_old) ~ "Ostracoda",
grepl("Appendicularia" , spec_id_old) ~ "Appendicularia",
grepl("Cephalopoda" , spec_id_old) ~ "Cephalopoda",
grepl("Bryozoa" , spec_id_old) ~ "Bryozoa",
grepl("Chaetognatha" , spec_id_old) ~ "Chaetognatha",
grepl("Cirripedia" , spec_id_old) ~ "Thecostraca",
grepl("Cnidaria|Siphonophorae" , spec_id_old) ~ "Cnidaria",
grepl("Thecosomata|Limacina|Gastropoda" , spec_id_old) ~ "Gastropoda",
grepl("Thaliacea" , spec_id_old) ~ "Thaliacea",
grepl("multiple<other|egg<other|Unknowns|gelatinous" , spec_id_old) ~ "Other",
))
metadata<- data %>%
distinct(sample_id, lat, lon, date, time, season, station,  depth_min, depth_max, depth_max_round,sample_volconc, .keep_all = F)
#seems lat is missing for 2019_pos536_bongo12l_lrg --> resolved
#same for individual taxonomic categories
species_abund <- aggregate(spec_id ~ (spec_id + sample_id + sample_volconc), data, length) # counts abundance of ind per tax. group per sample
data$annotation_category_new <- data$spec_id
#same for individual taxonomic categories
species_abund <- aggregate(spec_id ~ (annotation_category_new + sample_id + sample_volconc), data, length) # counts abundance of ind per tax. group per sample
data$annotation_category_new <- data$spec_id
#total abundance of individuals per sample
samples_abund <- aggregate(spec_id ~ (sample_id+sample_volconc), data, length) # counts abundance of individuals per sample
samples_abund$total_abundance_m3 <- samples_abund$spec_id/samples_abund$sample_volconc # calculates total abundance per m^3
samples_abund <-samples_abund[c("sample_id","total_abundance_m3")] # removes spec_id and sample_volconc columns
#same for individual taxonomic categories
species_abund <- aggregate(spec_id ~ (annotation_category + sample_id + sample_volconc), data, length) # counts abundance of ind per tax. group per sample
##read in all ecotaxa tsvs into one dataframe and select variables to keep
data_raw <- do.call(rbind,lapply(file_list,read.csv, header=TRUE, quote = '"', sep = "\t"))[ ,c('sample_id','object_annotation_category','object_annotation_hierarchy', 'object_date', 'object_time','object_lat', 'object_lon','object_depth_min', 'object_depth_max', 'object_area', 'sample_volconc')]
## remove detritus and other non-living organisms from dataframe
data1 <-data_raw[-grep("not-living", data_raw$object_annotation_hierarchy),]
rm(data_raw)
##remove other not-living data from dataframe
data2 <-data1[-grep("part<Crustacea|scale", data1$object_annotation_category),]
rm(data1)
##remove MSN data from dataframe
data <-data2[-grep("msn", data2$sample_id),]
rm(data2)
## check format of variables (numeric, character, factor, etc.)
str(data)
## rename some variables for easier/shorter names
names(data) = gsub(pattern = "object_", replacement = "", x = names(data))
data$spec_id_old <- data$annotation_category
##date format
data$date <- as.Date(as.character(data$date), format =  "%Y%m%d")
##time format
data$time <- sprintf("%06d", data$time)
data$time <- format(strptime(data$time, format="%H%M%S"), format = "%H:%M")
#and volumes seem super large -> flowmeter volume given in L
#changed to m3
#for both cruises volume changes from zoosplitter (1/4 or 1/8) have been incorporated
data$sample_volconc <- data$sample_volconc/1000
##calculate image area from pixels (pixel size = 10.6Âµm)
data$area_mm2 <- data$area*0.00011236
#fix error for max. depth in specific cells (probably typo upon data entry)
data <-within(data, depth_max[depth_max == 100 & sample_id == "2019_pos536_bongo4l_lrg"] <- 10)
data <-within(data, depth_max[depth_max == 100 & sample_id == "2019_pos536_bongo18r_lrg"] <- 300)
#round max depth of tows from Sonne cruise to nearest value 10,100,300
data <- data %>%
mutate (depth_max_round = case_when(
depth_max <50 ~ 10,
depth_max >= 50 & depth_max <=199 ~ 100,
TRUE ~ 300))
##create factor for season
data$season <- with(data,
ifelse(grepl("2019", date),"Summer_2019", "Winter_2020"))
#create column with random station name
data <- data %>%
mutate (station = case_when(
grepl('pos536_bongo3l', sample_id) ~ 'A',
grepl('pos536_bongo4|pos536_bongo5|pos536_bongo6', sample_id) ~ 'B',
grepl("pos536_bongo7|pos536_bongo8|pos536_bongo9", sample_id) ~ "C",
grepl("pos536_bongo10|pos536_bongo11|pos536_bongo12" , sample_id) ~ "D",
grepl("pos536_bongo13|pos536_bongo14|pos536_bongo15" , sample_id) ~ "E",
grepl("pos536_bongo16|pos536_bongo17|pos536_bongo18" , sample_id) ~ "F",
grepl("pos536_bongo19|pos536_bongo20|pos536_bongo21" , sample_id) ~ "G",
grepl("pos536_bongo22|pos536_bongo23|pos536_bongo24" , sample_id) ~ "H",
grepl("pos536_bongo25|pos536_bongo26|pos536_bongo27" , sample_id) ~ "I",
grepl("pos536_bongo28|pos536_bongo29|pos536_bongo30" , sample_id) ~ "J",
grepl("so279_bongo1a|so279_bongo2a" , sample_id) ~ "K",
grepl("so279_bongo3|so279_bongo4" , sample_id) ~ "L",
grepl("so279_bongo7|so279_bongo8|so279_bongo9" , sample_id) ~ "M",
grepl("so279_bongo16|so279_bongo17|so279_bongo18" , sample_id) ~ "N",
grepl("so279_bongo22|so279_bongo24" , sample_id) ~ "O",
))
## add annotation hierarchy column if possible giving the class
data <- data %>%
mutate (spec_id = case_when(
grepl('Actinopterygii|Myctophidae|Anguilliformes', spec_id_old) ~ 'Actinopterygii',  # Anguilliformes, Actinopterygii, scales, eggs
#grepl('Amphipoda', annotation_hierarchy) ~ 'Amphipoda', #class malacostraca
#grepl("Decapoda | Luciferidae", annotation_hierarchy) ~ "Decapoda", #class malacostraca
grepl("Decapoda|Luciferidae|Euphausiacea|Amphipoda" , spec_id_old) ~ "Malacostraca",
grepl("Annelida" , spec_id_old) ~ "Annelida",
grepl("Copepoda|Calanoida|Eucalanidae|Corycaeidae|Oithonidae|Sapphirina|Macrosetella" , spec_id) ~ "Copepoda", #class copepoda
grepl("Ostracoda" , spec_id_old) ~ "Ostracoda",
grepl("Appendicularia" , spec_id_old) ~ "Appendicularia",
grepl("Cephalopoda" , spec_id_old) ~ "Cephalopoda",
grepl("Bryozoa" , spec_id_old) ~ "Bryozoa",
grepl("Chaetognatha" , spec_id_old) ~ "Chaetognatha",
grepl("Cirripedia" , spec_id_old) ~ "Thecostraca",
grepl("Cnidaria|Siphonophorae" , spec_id_old) ~ "Cnidaria",
grepl("Thecosomata|Limacina|Gastropoda" , spec_id_old) ~ "Gastropoda",
grepl("Thaliacea" , spec_id_old) ~ "Thaliacea",
grepl("multiple<other|egg<other|Unknowns|gelatinous" , spec_id_old) ~ "Other",
))
##read in all ecotaxa tsvs into one dataframe and select variables to keep
data_raw <- do.call(rbind,lapply(file_list,read.csv, header=TRUE, quote = '"', sep = "\t"))[ ,c('sample_id','object_annotation_category','object_annotation_hierarchy', 'object_date', 'object_time','object_lat', 'object_lon','object_depth_min', 'object_depth_max', 'object_area', 'sample_volconc')]
## remove detritus and other non-living organisms from dataframe
data1 <-data_raw[-grep("not-living", data_raw$object_annotation_hierarchy),]
## list all ecotaxa in a folder
file_list <- list.files(pattern="*.tsv") # create list of all .tsv files in that folder
print(file_list)
##read in all ecotaxa tsvs into one dataframe and select variables to keep
data_raw <- do.call(rbind,lapply(file_list,read.csv, header=TRUE, quote = '"', sep = "\t"))[ ,c('sample_id','object_annotation_category','object_annotation_hierarchy', 'object_date', 'object_time','object_lat', 'object_lon','object_depth_min', 'object_depth_max', 'object_area', 'sample_volconc')]
## remove detritus and other non-living organisms from dataframe
data1 <-data_raw[-grep("not-living", data_raw$object_annotation_hierarchy),]
rm(data_raw)
##remove other not-living data from dataframe
data2 <-data1[-grep("part<Crustacea|scale", data1$object_annotation_category),]
rm(data1)
##remove MSN data from dataframe
data <-data2[-grep("msn", data2$sample_id),]
rm(data2)
## check format of variables (numeric, character, factor, etc.)
str(data)
## rename some variables for easier/shorter names
names(data) = gsub(pattern = "object_", replacement = "", x = names(data))
data$spec_id_old <- data$annotation_category
##date format
data$date <- as.Date(as.character(data$date), format =  "%Y%m%d")
##time format
data$time <- sprintf("%06d", data$time)
data$time <- format(strptime(data$time, format="%H%M%S"), format = "%H:%M")
#and volumes seem super large -> flowmeter volume given in L
#changed to m3
#for both cruises volume changes from zoosplitter (1/4 or 1/8) have been incorporated
data$sample_volconc <- data$sample_volconc/1000
##calculate image area from pixels (pixel size = 10.6Âµm)
data$area_mm2 <- data$area*0.00011236
#fix error for max. depth in specific cells (probably typo upon data entry)
data <-within(data, depth_max[depth_max == 100 & sample_id == "2019_pos536_bongo4l_lrg"] <- 10)
data <-within(data, depth_max[depth_max == 100 & sample_id == "2019_pos536_bongo18r_lrg"] <- 300)
data <- data %>%
mutate (depth_max_round = case_when(
depth_max <50 ~ 10,
depth_max >= 50 & depth_max <=199 ~ 100,
TRUE ~ 300))
##create factor for season
data$season <- with(data,
ifelse(grepl("2019", date),"Summer_2019", "Winter_2020"))
#create column with random station name
data <- data %>%
mutate (station = case_when(
grepl('pos536_bongo3l', sample_id) ~ 'A',
grepl('pos536_bongo4|pos536_bongo5|pos536_bongo6', sample_id) ~ 'B',
grepl("pos536_bongo7|pos536_bongo8|pos536_bongo9", sample_id) ~ "C",
grepl("pos536_bongo10|pos536_bongo11|pos536_bongo12" , sample_id) ~ "D",
grepl("pos536_bongo13|pos536_bongo14|pos536_bongo15" , sample_id) ~ "E",
grepl("pos536_bongo16|pos536_bongo17|pos536_bongo18" , sample_id) ~ "F",
grepl("pos536_bongo19|pos536_bongo20|pos536_bongo21" , sample_id) ~ "G",
grepl("pos536_bongo22|pos536_bongo23|pos536_bongo24" , sample_id) ~ "H",
grepl("pos536_bongo25|pos536_bongo26|pos536_bongo27" , sample_id) ~ "I",
grepl("pos536_bongo28|pos536_bongo29|pos536_bongo30" , sample_id) ~ "J",
grepl("so279_bongo1a|so279_bongo2a" , sample_id) ~ "K",
grepl("so279_bongo3|so279_bongo4" , sample_id) ~ "L",
grepl("so279_bongo7|so279_bongo8|so279_bongo9" , sample_id) ~ "M",
grepl("so279_bongo16|so279_bongo17|so279_bongo18" , sample_id) ~ "N",
grepl("so279_bongo22|so279_bongo24" , sample_id) ~ "O",
))
## add annotation hierarchy column if possible giving the class
data <- data %>%
mutate (spec_id = case_when(
grepl('Actinopterygii|Myctophidae|Anguilliformes', spec_id_old) ~ 'Actinopterygii',  # Anguilliformes, Actinopterygii, scales, eggs
#grepl('Amphipoda', annotation_hierarchy) ~ 'Amphipoda', #class malacostraca
#grepl("Decapoda | Luciferidae", annotation_hierarchy) ~ "Decapoda", #class malacostraca
grepl("Decapoda|Luciferidae|Euphausiacea|Amphipoda" , spec_id_old) ~ "Malacostraca",
grepl("Annelida" , spec_id_old) ~ "Annelida",
grepl("Copepoda|Calanoida|Eucalanidae|Corycaeidae|Oithonidae|Sapphirina|Macrosetella" , spec_id_old) ~ "Copepoda", #class copepoda
grepl("Ostracoda" , spec_id_old) ~ "Ostracoda",
grepl("Appendicularia" , spec_id_old) ~ "Appendicularia",
grepl("Cephalopoda" , spec_id_old) ~ "Cephalopoda",
grepl("Bryozoa" , spec_id_old) ~ "Bryozoa",
grepl("Chaetognatha" , spec_id_old) ~ "Chaetognatha",
grepl("Cirripedia" , spec_id_old) ~ "Thecostraca",
grepl("Cnidaria|Siphonophorae" , spec_id_old) ~ "Cnidaria",
grepl("Thecosomata|Limacina|Gastropoda" , spec_id_old) ~ "Gastropoda",
grepl("Thaliacea" , spec_id_old) ~ "Thaliacea",
grepl("multiple<other|egg<other|Unknowns|gelatinous" , spec_id_old) ~ "Other",
))
metadata<- data %>%
distinct(sample_id, lat, lon, date, time, season, station,  depth_min, depth_max, depth_max_round,sample_volconc, .keep_all = F)
data$annotation_category_new <- data$spec_id
#total abundance of individuals per sample
samples_abund <- aggregate(spec_id ~ (sample_id+sample_volconc), data, length) # counts abundance of individuals per sample
View(samples_abund)
samples_abund$total_abundance_m3 <- samples_abund$spec_id/samples_abund$sample_volconc # calculates total abundance per m^3
samples_abund <-samples_abund[c("sample_id","total_abundance_m3")] # removes spec_id and sample_volconc columns
View(samples_abund)
#same for individual taxonomic categories
species_abund <- aggregate(spec_id ~ (annotation_category_new + sample_id + sample_volconc), data, length) # counts abundance of ind per tax. group per sample
View(species_abund)
species_abund$abundance_m3 <- species_abund$spec_id/species_abund$sample_volconc
species_abund <-species_abund[c("sample_id","annotation_category","abundance_m3")]
species_abund <-species_abund[c("sample_id","annotation_category_new","abundance_m3")]
#spread to wide format
species_abund <-species_abund %>% spread(annotation_category_new, abundance_m3)
#merge to metadata and total abundance
abundance <- Reduce(function(dtf1, dtf2) merge(dtf1, dtf2, by = "sample_id", all.x = TRUE),
list(metadata, samples_abund, species_abund))
#replace NAs with zeros
abundance[is.na(abundance)] <- 0
View(abundance)
View(species_abund)
rm(data, samples_biomass, species_biomass, species_abund, samples_abund)
##not sure if biomass data is needed at this point --> check
#------------------------------------------------------------------------------------------------
##convert area to biomass for different taxa -- these relationships are from Lehette & Hernandez-leon and
## a*S^b (S= body area in mm^2) --> individual body weight/biomass (ug/dw ind)
## add here specific values for other species if they are available
## otherwise if taxonomic group or species are not listed in the source use general mesozooplankton value
data$biomass_ug <- with(data,
ifelse(grepl("Calanoida", annotation_hierarchy),45.25*data$area_mm2^1.59,
ifelse(grepl("Annelida", annotation_hierarchy),43.38*data $area_mm2^1.54,
ifelse(grepl("Chaetognatha", annotation_hierarchy),23.45*data $area_mm2^1.19,
ifelse(grepl("Gastropoda", annotation_hierarchy),43.38*data $area_mm2^1.54,
44.78*data$area_mm2^1.56)))))
#total biomass
samples_biomass <- aggregate(biomass_ug ~ (sample_id+sample_volconc), data, sum) # sums up biomass per sample
samples_biomass$total_biomass_ug_m3 <- samples_biomass$biomass_ug/samples_biomass$sample_volconc # calculates total biomass per m^3
samples_biomass <-samples_biomass[c("sample_id","total_biomass_ug_m3")] # removes biomass_ug and sample_volconc columns
#same for individual taxonomic categories
species_biomass <- aggregate(biomass_ug ~ (spec_id+sample_id + sample_volconc), data, sum)
species_biomass$biomass_ug_m3 <- species_biomass$biomass_ug/species_biomass$sample_volconc
species_biomass <-species_biomass[c("sample_id","spec_id","biomass_ug_m3")]
#spread to wide format
species_biomass <-species_biomass %>% spread(spec_id, biomass_ug_m3)
#merge to metadata and total abundance
biomass <- Reduce(function(dtf1, dtf2) merge(dtf1, dtf2, by = "sample_id", all.x = TRUE),
list(metadata, samples_biomass, species_biomass))
#replace NAs with zeros
biomass[is.na(biomass)] <- 0
#------------------------------------------------------------------------------------------------
rm(data, samples_biomass, species_biomass, species_abund, samples_abund)
##export summary data in case this shall be published (e.g. on Pangaea)
write.table(biomass, file = "POS536_biomass.txt")
write.table(abundance, file = "POS536_abundance.txt")
#calc
View(abundance)
names(abundance)
##calculate fraction from total abundance for calanoids, chaetognaths, krill and others
##add more groups if a more detailed view on fractions is wanted
abundance$Actinopterygii_fraction = abundance$Actinopterygii/abundance$total_abundance_m3
abundance$Annelida_fraction = abundance$Annelida/abundance$total_abundance_m3
abundance$Appendicularia_fraction = abundance$Appendicularia/abundance$total_abundance_m3
abundance$Bryozoa_fraction = abundance$Bryozoa/abundance$total_abundance_m3
abundance$Cephalopoda_fraction = abundance$Cephalopoda/abundance$total_abundance_m3
abundance$Chaetognatha_fraction = abundance$Chaetognatha/abundance$total_abundance_m3
abundance$Cnidaria_fraction = abundance$Cnidaria/abundance$total_abundance_m3
abundance$Copepoda_fraction = abundance$Copepoda/abundance$total_abundance_m3
abundance$Gastropoda_fraction = abundance$Gastropoda/abundance$total_abundance_m3
abundance$Malacostraca_fraction = abundance$Malacostraca/abundance$total_abundance_m3
abundance$Ostracoda_fraction = abundance$Ostracoda/abundance$total_abundance_m3
abundance$Thaliacea_fraction = abundance$Thaliacea/abundance$total_abundance_m3
abundance$Thecostraca_fraction = abundance$Thecostraca/abundance$total_abundance_m3
abundance$Other_fraction = abundance$Other/abundance$total_abundance_m3
abundance$other_fraction = 1 - abundance$Actinopterygii_fraction - abundance$Annelida_fraction -
abundance$Appendicularia_fraction - abundance$Bryozoa_fraction - abundance$Cephalopoda_fraction  -
abundance$Chaetognatha_fraction - abundance$Cnidaria_fraction - abundance$Gastropoda_fraction -
abundance$Malacostraca_fraction - abundance$Ostracoda_fraction - abundance$Thaliacea_fraction -
abundance$Thecostraca_fraction
abundance_fractions <-abundance[c("sample_id","lat", "lon", "total_abundance_m3","depth_max_round","season", "station", "Actinopterygii_fraction",
"Annelida_fraction","Appendicularia_fraction" ,"Bryozoa_fraction" , "Cephalopoda_fraction" , "Chaetognatha_fraction" ,
"Cnidaria_fraction", "Malacostraca_fraction" , "Ostracoda_fraction", "Thaliacea_fraction" ,
"Thecostraca_fraction", "other_fraction")]
write.table(abundance_fractions, file = "POS536_abundance_fractions.txt")
################plot on map
###load coastline data for Europe, using the map_data function
Area <- map_data("world")
#plot fractions of abundance without coordinates
#change df back to long format
long_abundance_fractions<-abundance_fractions %>% gather(spec_id, value, -1:-7)
#change labels of spec_id --> how it shows up in the legend
long_abundance_fractions$spec_id <- as.factor(long_abundance_fractions$spec_id)
#levels(long_abundance_fractions$spec_id)
levels(long_abundance_fractions$spec_id) <- c("Calanoida","Chaetognatha","Krill", "other")
## make depth a factor so the x axis is not continuous
long_abundance_fractions$depth_max_round <- as.factor(long_abundance_fractions$depth_max_round)
#levels(long_abundance_fractions$depth_max_round)
## change value to %
long_abundance_fractions$value <- long_abundance_fractions$value*100
base3 <-ggplot(data=long_abundance_fractions, aes(x=depth_max_round, y=value, fill=spec_id)) +
geom_bar(stat="identity") +
theme_bw() +
scale_fill_manual(values=c("cornflowerblue","coral1","darkslateblue", "darkgoldenrod1")) +
guides(fill = guide_legend(title = "Group")) +
xlab("Max. Depth (m)") + ylab("Fraction of Mesozooplankton Group (%)")
base3+facet_wrap(long_abundance_fractions$season ~ long_abundance_fractions$station)
View(abundance_fractions)
levels(long_abundance_fractions$spec_id)
View(long_abundance_fractions)
#change df back to long format
long_abundance_fractions<-abundance_fractions %>% gather(spec_id, value, -1:-7)
#change labels of spec_id --> how it shows up in the legend
long_abundance_fractions$spec_id <- as.factor(long_abundance_fractions$spec_id)
#levels(long_abundance_fractions$spec_id)
levels(long_abundance_fractions$spec_id) <- c( "Actinopterygii", "Annelida", "Appendicularia",
"Bryozoa", "Cephalopoda","Chaetognatha", "Cnidaria",
"Malacostraca", "Ostracoda","other","Thaliacea",
"Thecostraca","other")
## make depth a factor so the x axis is not continuous
long_abundance_fractions$depth_max_round <- as.factor(long_abundance_fractions$depth_max_round)
## change value to %
long_abundance_fractions$value <- long_abundance_fractions$value*100
base3 <-ggplot(data=long_abundance_fractions, aes(x=depth_max_round, y=value, fill=spec_id)) +
geom_bar(stat="identity") +
theme_bw() +
scale_fill_manual(values=c("cornflowerblue","coral1","darkslateblue", "darkgoldenrod1")) +
guides(fill = guide_legend(title = "Group")) +
xlab("Max. Depth (m)") + ylab("Fraction of Mesozooplankton Group (%)")
base3+facet_wrap(long_abundance_fractions$season ~ long_abundance_fractions$station)
View(long_abundance_fractions)
levels(long_abundance_fractions$spec_id)
#change df back to long format
long_abundance_fractions<-abundance_fractions %>% gather(spec_id, value, -1:-7)
#change labels of spec_id --> how it shows up in the legend
long_abundance_fractions$spec_id <- as.factor(long_abundance_fractions$spec_id)
levels(long_abundance_fractions$spec_id)
levels(long_abundance_fractions$spec_id) <- c( "Actinopterygii", "Annelida", "Appendicularia",
"Bryozoa", "Cephalopoda","Chaetognatha", "Cnidaria",
"Malacostraca", "Ostracoda","other","Thaliacea",
"Thecostraca")
#levels(long_abundance_fractions$spec_id)
levels(long_abundance_fractions$spec_id) <- c( "Actinopterygii", "Annelida", "Appendicularia",
"Bryozoa", "Cephalopoda","Chaetognatha", "Cnidaria",
"Malacostraca", "Ostracoda","other","Thaliacea",
"Thecostraca")
## make depth a factor so the x axis is not continuous
long_abundance_fractions$depth_max_round <- as.factor(long_abundance_fractions$depth_max_round)
## change value to %
long_abundance_fractions$value <- long_abundance_fractions$value*100
base3 <-ggplot(data=long_abundance_fractions, aes(x=depth_max_round, y=value, fill=spec_id)) +
geom_bar(stat="identity") +
theme_bw() +
scale_fill_manual(values=c("cornflowerblue","coral1","darkslateblue", "darkgoldenrod1")) +
guides(fill = guide_legend(title = "Group")) +
xlab("Max. Depth (m)") + ylab("Fraction of Mesozooplankton Group (%)")
base3+facet_wrap(long_abundance_fractions$season ~ long_abundance_fractions$station)
base3 <-ggplot(data=long_abundance_fractions, aes(x=depth_max_round, y=value, fill=spec_id)) +
geom_bar(stat="identity") +
theme_bw() +
scale_fill_manual(values=c("cornflowerblue","coral1","darkslateblue", "darkgoldenrod1",
"darkcyan", "darkgoldenrod4", "coral4", "aquamarine4",
"aquamarine1", "darkseagreen4", "antiquewhite3", "antiquewhite4")) +
guides(fill = guide_legend(title = "Group")) +
xlab("Max. Depth (m)") + ylab("Fraction of Mesozooplankton Group (%)")
base3+facet_wrap(long_abundance_fractions$season ~ long_abundance_fractions$station)
base3 <-ggplot(data=long_abundance_fractions, aes(x=depth_max_round, y=value, fill=spec_id)) +
geom_bar(stat="identity") +
theme_bw() +
scale_fill_manual(values=c("cornflowerblue","coral1","darkslateblue", "darkgoldenrod1",
"darkcyan", "darkgoldenrod4", "coral4", "aquamarine4",
"aquamarine1", "grey35", "antiquewhite3", "antiquewhite4")) +
guides(fill = guide_legend(title = "Group")) +
xlab("Max. Depth (m)") + ylab("Fraction of Mesozooplankton Group (%)")
base3+facet_wrap(long_abundance_fractions$season ~ long_abundance_fractions$station)
base3 <-ggplot(data=long_abundance_fractions, aes(x=depth_max_round, y=value, fill=spec_id)) +
geom_bar(stat="identity") +
theme_bw() +
scale_fill_manual(values=c("cornflowerblue","coral1","darkslateblue", "darkgoldenrod1",
"darkcyan", "darkgoldenrod4", "coral4", "aquamarine4",
"aquamarine1", "grey15", "antiquewhite3", "antiquewhite4")) +
guides(fill = guide_legend(title = "Group")) +
xlab("Max. Depth (m)") + ylab("Fraction of Mesozooplankton Group (%)")
base3+facet_wrap(long_abundance_fractions$season ~ long_abundance_fractions$station)
base3 <-ggplot(data=long_abundance_fractions, aes(x=depth_max_round, y=value, fill=spec_id)) +
geom_bar(stat="identity") +
theme_bw() +
scale_fill_manual(values=c("cornflowerblue","coral1","darkslateblue", "darkgoldenrod1",
"darkcyan", "darkgoldenrod4", "coral4", "aquamarine4",
"aquamarine1", "grey75", "antiquewhite3", "antiquewhite4")) +
guides(fill = guide_legend(title = "Group")) +
xlab("Max. Depth (m)") + ylab("Fraction of Mesozooplankton Group (%)")
base3+facet_wrap(long_abundance_fractions$season ~ long_abundance_fractions$station)
