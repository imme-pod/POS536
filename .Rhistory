geom_col() +
coord_flip() +
scale_x_reverse(limits=c(250,0), breaks=seq(0,250,50)) +
labs(title = "Biomass",x = "Depth (m)", y = "Biomass (mg/m^3)")+
theme(legend.position="none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
all <- ggarrange(p1, p2, ncol=2, nrow=1)
all
ggsave("Calanus_abundance_Biomass.png", width = 9, height = 9, bg = "transparent")
View(abundance)
#### R Script GO Sars size distribution plots
# Author: H.Hauss (hhauss@geomar.de)
# Read in Ecotaxa files, plot size and depth distribution of Calanus
library(ggplot2)
library(ggpubr)
## working directory
setwd("V:/Daten/Cruises/GOSars_multinet")
## read ecotaxa files
file_list <- list.files(pattern="*.tsv") # create list of all .tsv files in that folder
print(file_list)
##read in all ecotaxa tsvs and
data_raw <- do.call(rbind,lapply(file_list,read.csv, header=TRUE, quote = '"', sep = "\t"))[ ,c('sample_id','object_annotation_category','object_annotation_hierarchy', 'object_depth_min', 'object_depth_max', 'object_area', 'object_major', 'sample_volconc')]
## filter Calanus
data <-data_raw[grep("Calanus", data_raw$object_annotation_hierarchy),]
rm(data_raw)
## split the string
data$sample_id <-as.character(data$sample_id)
str(data)   ## check format of variables (numeric, character, factor, etc.)
## split string to assign net numbers
data$net_id  <- unlist(lapply(strsplit(as.character(data $sample_id), "_"), '[[', 4))
## rename some variables
data$depth_min <- data $object_depth_min
data$depth_max <- data $object_depth_max
data$depth_mid <- (data $object_depth_max +data $object_depth_min)/2
data$spec_id <- data $object_annotation_category
data$annotation_hierarchy<- data $object_annotation_hierarchy
#convert area from pixel to square mm
data$area_mm2 <- data $object_area* 0.00011236
data$length_mm <- data $object_major*10.6/1000
## check in Lehette & Hernandez Leon if these are the correct values for the taxon!
##to be changed! dummy values!!
data$biomass_ug <- with(data,45.25*data$area_mm2^1.59)
str(data)
# Size and biomass histograms
p1<-ggplot(data, aes(x=biomass_ug)) +
geom_histogram(color="black", fill="white")+
labs(title = "Calanus",x = "Biomass (µg)", y = "Count")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
p2<-ggplot(data, aes(x=length_mm)) +
geom_histogram(color="black", fill="white")+
labs(title = "Calanus",x = "Length (mm)", y = "Count")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
all <- ggarrange(p1, p2, ncol=2, nrow=1)
all
ggsave("Calanus_length_biomass_distribution.png", width = 9, height = 5, bg = "transparent")
layers <- do.call("rbind", by(data, data[1:5], with,
data.frame(sample_id = sample_id[1],
net_id = net_id[1],
depth_min = depth_min[1],
depth_max = depth_max[1],
depth_mid = depth_mid[1],
sample_volconc = sample_volconc[1],
spec_id = spec_id[1],
count = length(biomass_ug), biomass_ug = sum(biomass_ug), meanlength_mm = mean(length_mm))))
layers$abundance_m3 <- layers$count/layers$sample_volconc
layers$biomass_ug_m3 <- layers$biomass_ug/layers$sample_volconc
abundance <- aggregate(abundance_m3 ~ (net_id+spec_id+depth_min+depth_max+depth_mid), layers, sum)
biomass   <- aggregate(biomass_ug_m3 ~ (net_id+spec_id+depth_min+depth_max+depth_mid), layers, sum)
count = length(biomass_ug), biomass_ug = sum(biomass_ug))))
#filter for main groups
layers <- filter(layers, spec_id %in%  c("Calanoida", "Calanus", "Metridinidae", "Centropages", "Oithona", "Oncaea", "Euphausiacea", "Chaetognatha", "Actinopterygii"))
layers$abundance_m3 <- layers$count/layers$sample_volconc
layers$biomass_ug_m3 <- layers$biomass_ug/layers$sample_volconc
abundance <- aggregate(abundance_m3 ~ (net_id+spec_id+depth_min+depth_max+depth_mid), layers, sum)
write.table(abundance, file = "Calanus_abundance.txt")
biomass   <- aggregate(biomass_ug_m3 ~ (net_id+spec_id+depth_min+depth_max+depth_mid), layers, sum)
##Plots:
## vertical distribution barplot
#abundance
p1 <-ggplot(data=abundance, aes(x=depth_mid, y=abundance_m3 , width=(depth_max-depth_min))) +
geom_col() +
coord_flip() +
scale_x_reverse(limits=c(250,0), breaks=seq(0,250,50)) +
labs(title = "Abundance",x = "Depth (m)", y = "Abundance (ind/m^3)")+
theme(legend.position="none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
##biomass
p2 <- ggplot(data=biomass, aes(x=depth_mid, y=(biomass_ug_m3)/1000 , width=(depth_max-depth_min))) +
geom_col() +
coord_flip() +
scale_x_reverse(limits=c(250,0), breaks=seq(0,250,50)) +
labs(title = "Biomass",x = "Depth (m)", y = "Biomass (mg/m^3)")+
theme(legend.position="none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
all <- ggarrange(p1, p2, ncol=2, nrow=1)
all
ggsave("Calanus_abundance_Biomass.png", width = 9, height = 9, bg = "transparent")
#### R Script GO Sars distribution plots
# Author: H.Hauss (hhauss@geomar.de)
# Read ecotaxa output, calculate individual biomass, aggregate to depth
#layers, plot vertical distribution
library(ggplot2)
library(dplyr)
library(ggpubr)
## working directory
setwd("V:/Daten/Cruises/GOSars_multinet")
## read ecotaxa files and join data-sets lrg, med und sml
file_list <- list.files(pattern="*.tsv") # create list of all .tsv files in that folder
print(file_list)
##read in all ecotaxa tsvs and
data_raw <- do.call(rbind,lapply(file_list,read.csv, header=TRUE, quote = '"', sep = "\t"))[ ,c('sample_id','object_annotation_category','object_annotation_hierarchy', 'object_depth_min', 'object_depth_max', 'object_area', 'sample_volconc')]
## filter living
data <-data_raw[-grep("not-living", data_raw$object_annotation_hierarchy),]
rm(data_raw)
## split the string
data$sample_id <-as.character(data$sample_id)
str(data)   ## check format of variables (numeric, character, factor, etc.)
## split string to assign net numbers
data$net_id  <- unlist(lapply(strsplit(as.character(data $sample_id), "_"), '[[', 4))
## rename some variables
data$depth_min <- data $object_depth_min
data$depth_max <- data $object_depth_max
data$depth_mid <- (data $object_depth_max +data $object_depth_min)/2
data$spec_id <- data $object_annotation_category
data$annotation_hierarchy<- data $object_annotation_hierarchy
#convert area from pixel to square mm
data$area_mm2 <- data $object_area* 0.00011236
## check in Lehette & Hernandez Leon if these are the correct values for the taxon!
##to be changed! dummy values!!
data$biomass_ug <- with(data,
ifelse(grepl("Calanoida", annotation_hierarchy),45.25*data$area_mm2^1.59,
ifelse(grepl("Annelida", annotation_hierarchy),43.38*data $area_mm2^1.54,
ifelse(grepl("Chaetognatha", annotation_hierarchy),23.45*data $area_mm2^1.19,
ifelse(grepl("Gastropoda", annotation_hierarchy),43.38*data $area_mm2^1.54,
44.78*data$area_mm2^1.56)))))
layers <- do.call("rbind", by(data, data[1:5], with,
data.frame(sample_id = sample_id[1],
net_id = net_id[1],
depth_min = depth_min[1],
depth_max = depth_max[1],
depth_mid = depth_mid[1],
sample_volconc = sample_volconc[1],
spec_id = spec_id[1],
count = length(biomass_ug), biomass_ug = sum(biomass_ug))))
#filter for main groups
layers <- filter(layers, spec_id %in%  c("Calanoida", "Calanus", "Metridinidae", "Centropages", "Oithona", "Oncaea", "Euphausiacea", "Chaetognatha", "Actinopterygii"))
layers$abundance_m3 <- layers$count/layers$sample_volconc
layers$biomass_ug_m3 <- layers$biomass_ug/layers$sample_volconc
abundance <- aggregate(abundance_m3 ~ (net_id+spec_id+depth_min+depth_max+depth_mid), layers, sum)
biomass   <- aggregate(biomass_ug_m3 ~ (net_id+spec_id+depth_min+depth_max+depth_mid), layers, sum)
write.table(abundance, file = "abundance_all.txt")
write.table(biomass, file = "biomass_all.txt")
##Plots:
## vertical distribution barplot
#abundance
p1 <-ggplot(data=abundance, aes(x=depth_mid, y=abundance_m3 , fill=spec_id, width=(depth_max-depth_min))) +
geom_col() +
coord_flip() +
scale_x_reverse(limits=c(250,0), breaks=seq(0,250,50)) +
labs(title = "Abundance",x = "Depth (m)", y = "Abundance (ind/m^3")+
theme(legend.position="none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
##biomass
p2 <- ggplot(data=biomass, aes(x=depth_mid, y=(biomass_ug_m3)/1000 , fill=spec_id, width=(depth_max-depth_min))) +
geom_col() +
coord_flip() +
scale_x_reverse(limits=c(250,0), breaks=seq(0,250,50)) +
labs(title = "Biomass",x = "Depth (m)", y = "Biomass (mg/m^3)", fill="Group")+
theme(legend.position=c(.8,.75), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
all <- ggarrange(p1, p2, ncol=2, nrow=1)
all
<<<<<<< HEAD
ggsave("Abundance_Biomass.png", width = 9, height = 9, bg = "transparent")
=======
ggsave("Abundance_Biomass.png", width = 9, height = 9, bg = "transparent")
>>>>>>> cafd195165216818c1ab22669012ee105b1d0fd6
#### R Script POS536 zooplankton distribution plot
# Author: H.Hauss (hhauss@geomar.de)
# Calculate zooplankton abundance and biomass from Ecotaxa tsv export
#POS536. Mesozooplankton was collected using a
#Bongo net (200µm mesh size?), oblique hauls
#samples were scanned using an Epson V750 pro scanner and imported into Ecotaxa
#load libraries (install first)
library(dplyr)
library(tidyr)
library(ggplot2)
library(maps)
library(mapdata)
library(scatterpie)
## set working directory -- change this to where you saved your .tsv data
setwd("V:/Daten/Cruises/POS536_SO")
## list all ecotaxa in a folder
file_list <- list.files(pattern="*.tsv") # create list of all .tsv files in that folder
print(file_list)
##read in all ecotaxa tsvs into one dataframe and select variables to keep
data_raw <- do.call(rbind,lapply(file_list,read.csv, header=TRUE, quote = '"', sep = "\t"))[ ,c('sample_id','object_annotation_category','object_annotation_hierarchy', 'object_date', 'object_time','object_lat', 'object_lon','object_depth_min', 'object_depth_max', 'object_area', 'sample_volconc')]
## remove detritus and other non-living organisms from dataframe
data <-data_raw[-grep("not-living", data_raw$object_annotation_hierarchy),]
rm(data_raw)
## check format of variables (numeric, character, factor, etc.)
str(data)
## rename some variables for easier/shorter names
names(data) = gsub(pattern = "object_", replacement = "", x = names(data))
data$spec_id <- data$annotation_category
##date format
data$date <- as.Date(as.character(data$date), format =  "%Y%m%d")
##time format
data$time <- sprintf("%06d", data$time)
data$time <- format(strptime(data$time, format="%H%M%S"), format = "%H:%M")
metadata<- data %>%
distinct(sample_id, lat, lon, date, time, depth_min, depth_max,sample_volconc, .keep_all = F)
#seems lat is missing for 2019_pos536_bongo12l_lrg and volumes seem super large...check!!!
##calculate image area from pixels (pixel size = 10.6µm)
data$area_mm2 <- data$area*0.00011236
##convert area to biomass for different taxa -- these relationships are from Lehette & Hernandez-leon and
data$biomass_ug <- with(data,
ifelse(grepl("Calanoida", annotation_hierarchy),45.25*data$area_mm2^1.59,
ifelse(grepl("Annelida", annotation_hierarchy),43.38*data $area_mm2^1.54,
ifelse(grepl("Chaetognatha", annotation_hierarchy),23.45*data $area_mm2^1.19,
ifelse(grepl("Gastropoda", annotation_hierarchy),43.38*data $area_mm2^1.54,
44.78*data$area_mm2^1.56)))))
#total abundance
samples_abund <- aggregate(biomass_ug ~ (sample_id+sample_volconc), data, length)
samples_abund$total_abundance_m3 <- samples_abund$spec_id/samples_abund$sample_volconc
samples_abund <-samples_abund[c("sample_id","total_abundance_m3")]
#same for individual taxonomic categories
species_abund <- aggregate(biomass_ug ~ (spec_id+sample_id + sample_volconc), data, length)
species_abund$abundance_m3 <- species_abund$biomass_ug/species_abund$sample_volconc
species_abund <-species_abund[c("sample_id","spec_id","abundance_m3")]
#spread to wide format
species_abund <-species_abund %>% spread(spec_id, abundance_m3)
#merge to metadata and total abundance
abundance <- Reduce(function(dtf1, dtf2) merge(dtf1, dtf2, by = "sample_id", all.x = TRUE),
list(metadata, samples_abund, species_abund))
#replace NAs with zeros
abundance[is.na(abundance)] <- 0
#total biomass
samples_biomass <- aggregate(biomass_ug ~ (sample_id+sample_volconc), data, sum)
samples_biomass$total_biomass_ug_m3 <- samples_biomass$biomass_ug/samples_biomass$sample_volconc
samples_biomass <-samples_biomass[c("sample_id","total_biomass_ug_m3")]
#same for individual taxonomic categories
species_biomass <- aggregate(biomass_ug ~ (spec_id+sample_id + sample_volconc), data, sum)
species_biomass$biomass_ug_m3 <- species_biomass$biomass_ug/species_biomass$sample_volconc
species_biomass <-species_biomass[c("sample_id","spec_id","biomass_ug_m3")]
#spread to wide format
species_biomass <-species_biomass %>% spread(spec_id, biomass_ug_m3)
#merge to metadata and total abundance
biomass <- Reduce(function(dtf1, dtf2) merge(dtf1, dtf2, by = "sample_id", all.x = TRUE),
list(metadata, samples_biomass, species_biomass))
#replace NAs with zeros
biomass[is.na(biomass)] <- 0
rm(data, samples_biomass, species_biomass, species_abund, samples_abund)
##export summary data in case this shall be published (e.g. on Pangaea)
write.table(biomass, file = "POS536_biomass.txt")
write.table(abundance, file = "POS536_abundance.txt")
#calculate integrated biomass in mg per m2
##calculate fraction from total biomass for calanoids, chaetognaths, krill and others
biomass$calanoid_fraction = biomass$Calanoida/biomass$total_biomass_ug_m3
biomass$krill_fraction = biomass$Euphausiacea/biomass$total_biomass_ug_m3
biomass$chaetognath_fraction = biomass$Chaetognatha/biomass$total_biomass_ug_m3
biomass$other_fraction = 1 - biomass$calanoid_fraction - biomass$chaetognath_fraction - biomass$krill_fraction
fractions <-biomass[c("sample_id","lat", "lon", "total_biomass_ug_m3", "calanoid_fraction", "krill_fraction","chaetognath_fraction", "other_fraction")]
View(biomass)
View(biomass)
#### R Script POS536 zooplankton distribution plot
# Author: H.Hauss (hhauss@geomar.de)
# Calculate zooplankton abundance and biomass from Ecotaxa tsv export
#POS536. Mesozooplankton was collected using a
#Bongo net (200µm mesh size?), oblique hauls
#samples were scanned using an Epson V750 pro scanner and imported into Ecotaxa
#load libraries (install first)
library(dplyr)
library(tidyr)
library(ggplot2)
library(maps)
library(mapdata)
library(scatterpie)
## set working directory -- change this to where you saved your .tsv data
setwd("V:/Daten/Cruises/POS536_SO")
## list all ecotaxa in a folder
file_list <- list.files(pattern="*.tsv") # create list of all .tsv files in that folder
print(file_list)
##read in all ecotaxa tsvs into one dataframe and select variables to keep
data_raw <- do.call(rbind,lapply(file_list,read.csv, header=TRUE, quote = '"', sep = "\t"))[ ,c('sample_id','object_annotation_category','object_annotation_hierarchy', 'object_date', 'object_time','object_lat', 'object_lon','object_depth_min', 'object_depth_max', 'object_area', 'sample_volconc')]
## remove detritus and other non-living organisms from dataframe
data <-data_raw[-grep("not-living", data_raw$object_annotation_hierarchy),]
rm(data_raw)
## check format of variables (numeric, character, factor, etc.)
str(data)
## rename some variables for easier/shorter names
names(data) = gsub(pattern = "object_", replacement = "", x = names(data))
data$spec_id <- data$annotation_category
##date format
data$date <- as.Date(as.character(data$date), format =  "%Y%m%d")
##time format
data$time <- sprintf("%06d", data$time)
data$time <- format(strptime(data$time, format="%H%M%S"), format = "%H:%M")
metadata<- data %>%
distinct(sample_id, lat, lon, date, time, depth_min, depth_max,sample_volconc, .keep_all = F)
#s
#### R Script POS536 zooplankton distribution plot
# Author: H.Hauss (hhauss@geomar.de)
# Calculate zooplankton abundance and biomass from Ecotaxa tsv export
#POS536. Mesozooplankton was collected using a
#Bongo net (200µm mesh size?), oblique hauls
#samples were scanned using an Epson V750 pro scanner and imported into Ecotaxa
#load libraries (install first)
library(dplyr)
library(tidyr)
library(ggplot2)
library(maps)
library(mapdata)
library(scatterpie)
## set working directory -- change this to where you saved your .tsv data
setwd("V:/Daten/Cruises/POS536_SO")
## list all ecotaxa in a folder
file_list <- list.files(pattern="*.tsv") # create list of all .tsv files in that folder
print(file_list)
##read in all ecotaxa tsvs into one dataframe and select variables to keep
data_raw <- do.call(rbind,lapply(file_list,read.csv, header=TRUE, quote = '"', sep = "\t"))[ ,c('sample_id','object_annotation_category','object_annotation_hierarchy', 'object_date', 'object_time','object_lat', 'object_lon','object_depth_min', 'object_depth_max', 'object_area', 'sample_volconc')]
## remove detritus and other non-living organisms from dataframe
data <-data_raw[-grep("not-living", data_raw$object_annotation_hierarchy),]
rm(data_raw)
## check format of variables (numeric, character, factor, etc.)
str(data)
## rename some variables for easier/shorter names
names(data) = gsub(pattern = "object_", replacement = "", x = names(data))
data$spec_id <- data$annotation_category
##date format
data$date <- as.Date(as.character(data$date), format =  "%Y%m%d")
##time format
data$time <- sprintf("%06d", data$time)
data$time <- format(strptime(data$time, format="%H%M%S"), format = "%H:%M")
metadata<- data %>%
distinct(sample_id, lat, lon, date, time, depth_min, depth_max,sample_volconc, .keep_all = F)
#seems lat is missing for 2019_pos536_bongo12l_lrg and volumes seem super large...check!!!
##calculate image area from pixels (pixel size = 10.6µm)
data$area_mm2 <- data$area*0.00011236
##convert area to biomass for different taxa -- these relationships are from Lehette & Hernandez-leon and
data$biomass_ug <- with(data,
ifelse(grepl("Calanoida", annotation_hierarchy),45.25*data$area_mm2^1.59,
ifelse(grepl("Annelida", annotation_hierarchy),43.38*data $area_mm2^1.54,
ifelse(grepl("Chaetognatha", annotation_hierarchy),23.45*data $area_mm2^1.19,
ifelse(grepl("Gastropoda", annotation_hierarchy),43.38*data $area_mm2^1.54,
44.78*data$area_mm2^1.56)))))
#total abundance
samples_abund <- aggregate(biomass_ug ~ (sample_id+sample_volconc), data, length)
samples_abund$total_abundance_m3 <- samples_abund$spec_id/samples_abund$sample_volconc
samples_abund <-samples_abund[c("sample_id","total_abundance_m3")]
#same for individual taxonomic categories
species_abund <- aggregate(biomass_ug ~ (spec_id+sample_id + sample_volconc), data, length)
species_abund$abundance_m3 <- species_abund$biomass_ug/species_abund$sample_volconc
species_abund <-species_abund[c("sample_id","spec_id","abundance_m3")]
#spread to wide format
species_abund <-species_abund %>% spread(spec_id, abundance_m3)
#merge to metadata and total abundance
abundance <- Reduce(function(dtf1, dtf2) merge(dtf1, dtf2, by = "sample_id", all.x = TRUE),
list(metadata, samples_abund, species_abund))
#replace NAs with zeros
abundance[is.na(abundance)] <- 0
#total biomass
samples_biomass <- aggregate(biomass_ug ~ (sample_id+sample_volconc), data, sum)
samples_biomass$total_biomass_ug_m3 <- samples_biomass$biomass_ug/samples_biomass$sample_volconc
samples_biomass <-samples_biomass[c("sample_id","total_biomass_ug_m3")]
#same for individual taxonomic categories
species_biomass <- aggregate(biomass_ug ~ (spec_id+sample_id + sample_volconc), data, sum)
species_biomass$biomass_ug_m3 <- species_biomass$biomass_ug/species_biomass$sample_volconc
species_biomass <-species_biomass[c("sample_id","spec_id","biomass_ug_m3")]
#spread to wide format
species_biomass <-species_biomass %>% spread(spec_id, biomass_ug_m3)
#merge to metadata and total abundance
biomass <- Reduce(function(dtf1, dtf2) merge(dtf1, dtf2, by = "sample_id", all.x = TRUE),
list(metadata, samples_biomass, species_biomass))
#replace NAs with zeros
biomass[is.na(biomass)] <- 0
rm(data, samples_biomass, species_biomass, species_abund, samples_abund)
##export summary data in case this shall be published (e.g. on Pangaea)
write.table(biomass, file = "POS536_biomass.txt")
write.table(abundance, file = "POS536_abundance.txt")
#calculate integrated biomass in mg per m2
##calculate fraction from total biomass for calanoids, chaetognaths, krill and others
biomass$calanoid_fraction = biomass$Calanoida/biomass$total_biomass_ug_m3
biomass$krill_fraction = biomass$Euphausiacea/biomass$total_biomass_ug_m3
biomass$chaetognath_fraction = biomass$Chaetognatha/biomass$total_biomass_ug_m3
biomass$other_fraction = 1 - biomass$calanoid_fraction - biomass$chaetognath_fraction - biomass$krill_fraction
fractions <-biomass[c("sample_id","lat", "lon", "total_biomass_ug_m3", "calanoid_fraction", "krill_fraction","chaetognath_fraction", "other_fraction")]
################plot on map
###load coastline data for Europe, using the map_data function
Area <- map_data("world")
#plot map of total biomass as bubble plot
ggplot() +
theme_bw()+
geom_polygon(fill="darkgoldenrod1", color = "black", data = Area, aes(x=long, y = lat, group = group)) + ##this adds the coastlines
geom_point(data = biomass, aes(x = lon, y = lat, size = total_biomass_ug_m3), color = "red", alpha=0.7) +
coord_quickmap(xlim=c(-40,-4), ylim=c(25,50))  + ##map boundaries
labs(title = "Total Biomass",x = "Longitude °W", y = "Latitude °N", size = "ug / m²")                                         ##axis labels
ggsave("V:/Daten/Cruises/POS536/total_biomass_bubble.png", width = 7, height = 5, bg = "transparent")
#plot map with piecharts to show fraction of different groups
#something is still wrong here, check...
ggplot() +
theme_bw()+
geom_polygon(fill="darkgoldenrod1", color = "black", data = Area, aes(x=long, y = lat, group = group)) +  ## coastlines                                                       ##map boundaries
labs(title = "POS536",x = "Longitude °W", y = "Latitude °N", size = "Biomass (mg / m²)")  +                          ##axis labels
geom_point(data = biomass, aes(x = lon, y = lat, size = total_biomass_ug_m3), pch=21, fill = "transparent", color= "black") +
geom_scatterpie(aes(x=lon, y=lat, group = sample_id, r = ((total_biomass_ug_m3/3.14)^0.5)),
data = fractions, cols = colnames(fractions[,c(5:8)])) +
scale_fill_manual(name="Group",
labels=c("Copepoda","Krill","Chaetognatha", "other"), values=c("green1","coral1","darkslateblue", "yellow")) +
coord_fixed(xlim=c(-40,-4), ylim=c(25,50))
ggsave("V:/Daten/Cruises/POS536/biomass_pie.png", width = 7, height = 5, bg = "transparent")
View(biomass)
View(fractions)
#plot map of total biomass as bubble plot
ggplot() +
theme_bw()+
geom_polygon(fill="darkgoldenrod1", color = "black", data = Area, aes(x=long, y = lat, group = group)) + ##this adds the coastlines
geom_point(data = fractions, aes(x = lon, y = lat, size = total_biomass_ug_m3), color = "red", alpha=0.7) +
coord_quickmap(xlim=c(-40,-4), ylim=c(25,50))  + ##map boundaries
labs(title = "Total Biomass",x = "Longitude °W", y = "Latitude °N", size = "ug / m²")                                         ##axis labels
#something is still wrong here, check...
ggplot() +
theme_bw()+
geom_polygon(fill="darkgoldenrod1", color = "black", data = Area, aes(x=long, y = lat, group = group)) +  ## coastlines                                                       ##map boundaries
labs(title = "POS536 & SO579",x = "Longitude °W", y = "Latitude °N", size = "Biomass (mg / m²)")  +                          ##axis labels
geom_point(data = fractions, aes(x = lon, y = lat, size = total_biomass_ug_m3), pch=21, fill = "transparent", color= "black") +
geom_scatterpie(aes(x=lon, y=lat, group = sample_id, r = ((total_biomass_ug_m3/3.14)^0.5)),
data = fractions, cols = colnames(fractions[,c(5:8)])) +
scale_fill_manual(name="Group",
labels=c("Copepoda","Krill","Chaetognatha", "other"), values=c("green1","coral1","darkslateblue", "yellow")) +
coord_fixed(xlim=c(-40,-4), ylim=c(25,50))
View(fractions)
#something is still wrong here, check...
ggplot() +
theme_bw()+
geom_polygon(fill="darkgoldenrod1", color = "black", data = Area, aes(x=long, y = lat, group = group)) +  ## coastlines                                                       ##map boundaries
labs(title = "POS536 & SO579",x = "Longitude °W", y = "Latitude °N", size = "Biomass (mg / m²)")  +                          ##axis labels
geom_point(data = fractions, aes(x = lon, y = lat, size = total_biomass_ug_m3), pch=21, fill = "transparent", color= "black") +
geom_scatterpie(aes(x=lon, y=lat, group = sample_id, r = ((total_biomass_ug_m3/3.14)^0.5)),
data = fractions, cols = colnames(fractions[,c(6:8)])) +
scale_fill_manual(name="Group",
labels=c("Copepoda","Krill","Chaetognatha", "other"), values=c("green1","coral1","darkslateblue", "yellow")) +
coord_fixed(xlim=c(-40,-4), ylim=c(25,50))
ggplot() +
theme_bw()+
geom_polygon(fill="darkgoldenrod1", color = "black", data = Area, aes(x=long, y = lat, group = group)) +  ## coastlines                                                       ##map boundaries
labs(title = "POS536 & SO579",x = "Longitude °W", y = "Latitude °N", size = "Biomass (mg / m²)")  +                          ##axis labels
geom_point(data = fractions, aes(x = lon, y = lat, size = total_biomass_ug_m3), pch=21, fill = "transparent", color= "black") +
geom_scatterpie(aes(x=lon, y=lat, group = sample_id, r = ((total_biomass_ug_m3/3.14)^0.5)),
data = fractions, cols = colnames(fractions[,c(4:8)])) +
scale_fill_manual(name="Group",
labels=c("Copepoda","Krill","Chaetognatha", "other"), values=c("green1","coral1","darkslateblue", "yellow")) +
coord_fixed(xlim=c(-40,-4), ylim=c(25,50))
#something is still wrong here, check...
ggplot() +
theme_bw()+
geom_polygon(fill="darkgoldenrod1", color = "black", data = Area, aes(x=long, y = lat, group = group)) +  ## coastlines                                                       ##map boundaries
labs(title = "POS536 & SO579",x = "Longitude °W", y = "Latitude °N", size = "Biomass (mg / m²)")  +                          ##axis labels
geom_point(data = fractions, aes(x = lon, y = lat, size = total_biomass_ug_m3), pch=21, fill = "transparent", color= "black") +
geom_scatterpie(aes(x=lon, y=lat, group = sample_id, r = ((total_biomass_ug_m3/3.14)^0.5)),
data = fractions, cols = colnames(fractions[,c(5:8)])) +
scale_fill_manual(name="Group",
labels=c("Calanoida","Krill","Chaetognatha", "other"), values=c("green1","coral1","darkslateblue", "yellow")) +
coord_fixed(xlim=c(-40,-4), ylim=c(25,50))
#plot map with piecharts to show fraction of different groups
#something is still wrong here, check...
ggplot() +
theme_bw()+
geom_polygon(fill="darkgoldenrod1", color = "black", data = Area, aes(x=long, y = lat, group = group)) +  ## coastlines                                                       ##map boundaries
labs(title = "POS536 & SO579",x = "Longitude °W", y = "Latitude °N", size = "Biomass (mg / m²)")  +                          ##axis labels
#geom_point(data = fractions, aes(x = lon, y = lat, size = total_biomass_ug_m3), pch=21, fill = "transparent", color= "black") +
geom_scatterpie(aes(x=lon, y=lat, group = sample_id, r = ((total_biomass_ug_m3/3.14)^0.5)),
data = fractions, cols = colnames(fractions[,c(5:8)])) +
scale_fill_manual(name="Group",
labels=c("Calanoida","Krill","Chaetognatha", "other"), values=c("green1","coral1","darkslateblue", "yellow")) +
coord_fixed(xlim=c(-40,-4), ylim=c(25,50))
write.table(fractions, file = "POS536_fractions.txt")
ggplot() +
theme_bw()+
geom_polygon(fill="darkgoldenrod1", color = "black", data = Area, aes(x=long, y = lat, group = group)) +  ## coastlines                                                       ##map boundaries
labs(title = "POS536 & SO579",x = "Longitude °W", y = "Latitude °N", size = "Biomass (mg / m²)")  +                          ##axis labels
#geom_point(data = fractions, aes(x = lon, y = lat, size = total_biomass_ug_m3), pch=21, fill = "transparent", color= "black") +
geom_scatterpie(aes(x=lon, y=lat, group = sample_id, r = ((total_biomass_ug_m3/3.14)^0.5)),
data = fractions, cols = colnames(fractions[,c(5:8)])) +
coord_fixed(xlim=c(-40,-4), ylim=c(25,50))
ggplot() +
theme_bw()+
geom_polygon(fill="darkgoldenrod1", color = "black", data = Area, aes(x=long, y = lat, group = group)) +  ## coastlines                                                       ##map boundaries
labs(title = "POS536 & SO579",x = "Longitude °W", y = "Latitude °N", size = "Biomass (mg / m²)")  +                          ##axis labels
#geom_point(data = fractions, aes(x = lon, y = lat, size = total_biomass_ug_m3), pch=21, fill = "transparent", color= "black") +
geom_scatterpie(aes(x=lon, y=lat, group = sample_id, r = total_biomass_ug_m3,
data = fractions, cols = colnames(fractions[,c(5:8)])) +
coord_fixed(xlim=c(-40,-4), ylim=c(25,50))
ggplot() +
theme_bw()+
geom_polygon(fill="darkgoldenrod1", color = "black", data = Area, aes(x=long, y = lat, group = group)) +  ## coastlines                                                       ##map boundaries
labs(title = "POS536 & SO579",x = "Longitude °W", y = "Latitude °N", size = "Biomass (mg / m²)")  +                          ##axis labels
#geom_point(data = fractions, aes(x = lon, y = lat, size = total_biomass_ug_m3), pch=21, fill = "transparent", color= "black") +
geom_scatterpie(aes(x=lon, y=lat, group = sample_id, r = total_biomass_ug_m3,
data = fractions, cols = colnames(fractions[,c(5:8)])) +
coord_fixed(xlim=c(-40,-4), ylim=c(25,50))
View(fractions)
ggplot() +
theme_bw()+
geom_polygon(fill="darkgoldenrod1", color = "black", data = Area, aes(x=long, y = lat, group = group)) +  ## coastlines                                                       ##map boundaries
labs(title = "POS536 & SO579",x = "Longitude °W", y = "Latitude °N", size = "Biomass (mg / m²)")  +                          ##axis labels
#geom_point(data = fractions, aes(x = lon, y = lat, size = total_biomass_ug_m3), pch=21, fill = "transparent", color= "black") +
geom_scatterpie(aes(x=lon, y=lat, group = sample_id, r = total_biomass_ug_m3,
data = fractions, cols = colnames(fractions[,c(5:8)])) +
coord_fixed(xlim=c(-40,-4), ylim=c(25,50))
